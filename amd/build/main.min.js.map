{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["import { processText } from './repository';\n\nlet initialized = false;\n\nexport const init = () => {\n    // eslint-disable-next-line no-console\n    console.log(\"The init function was called\");\n\n    if (initialized) {\n        return;\n    }\n\n    initialized = true;\n\n    // eslint-disable-next-line no-console\n    console.log('Executing init function logic');\n\n    var scanButton = document.getElementById('scan-button');\n    if (scanButton) {\n        // eslint-disable-next-line no-console\n        console.log('scanButton found:', scanButton);\n\n        scanButton.addEventListener('click', function() {\n            // eslint-disable-next-line no-console\n            console.log('Scan button clicked');\n\n            var selectedTextContainer = document.getElementById('selected-text-container');\n            if (selectedTextContainer) {\n                // eslint-disable-next-line no-console\n                console.log('selectedTextContainer found:', selectedTextContainer);\n                selectedTextContainer.textContent = 'Selected Text: ';\n            } else {\n                // eslint-disable-next-line no-console\n                console.log('selectedTextContainer not found');\n            }\n\n            alert('Please select text on the page.');\n\n            var textSelectionHandler = function() {\n                var selectedText = window.getSelection().toString().trim();\n                // eslint-disable-next-line no-console\n                console.log('Selected text:', selectedText);\n\n                if (selectedText !== '') {\n                    // eslint-disable-next-line no-console\n                    console.log('Selected text is not empty:', selectedText);\n                    if (selectedTextContainer) {\n                        selectedTextContainer.textContent += selectedText;\n                    }\n\n                    processText(selectedText).then(response => {\n                        alert('Readability Score: ' + response.readabilityscore);\n                    }).catch(error => {\n                        // eslint-disable-next-line no-console\n                        console.error('Error:', error);\n                    });\n\n                    document.removeEventListener('mouseup', textSelectionHandler);\n                } else {\n                    // eslint-disable-next-line no-console\n                    console.log('No text selected');\n                }\n            };\n\n            document.addEventListener('mouseup', textSelectionHandler);\n            // eslint-disable-next-line no-console\n            console.log('textSelectionHandler added');\n        });\n    } else {\n        // eslint-disable-next-line no-console\n        console.log('scanButton not found');\n    }\n};\n"],"names":["initialized","console","log","scanButton","document","getElementById","addEventListener","selectedTextContainer","textContent","alert","textSelectionHandler","selectedText","window","getSelection","toString","trim","then","response","readabilityscore","catch","error","removeEventListener"],"mappings":"iLAEIA,aAAc,gBAEE,QAEhBC,QAAQC,IAAI,iCAERF,aAIJA,aAAc,EAGdC,QAAQC,IAAI,qCAERC,WAAaC,SAASC,eAAe,eACrCF,YAEAF,QAAQC,IAAI,oBAAqBC,YAEjCA,WAAWG,iBAAiB,SAAS,WAEjCL,QAAQC,IAAI,2BAERK,sBAAwBH,SAASC,eAAe,2BAChDE,uBAEAN,QAAQC,IAAI,+BAAgCK,uBAC5CA,sBAAsBC,YAAc,mBAGpCP,QAAQC,IAAI,mCAGhBO,MAAM,uCAEFC,qBAAuB,eACnBC,aAAeC,OAAOC,eAAeC,WAAWC,OAEpDd,QAAQC,IAAI,iBAAkBS,cAET,KAAjBA,cAEAV,QAAQC,IAAI,8BAA+BS,cACvCJ,wBACAA,sBAAsBC,aAAeG,0CAG7BA,cAAcK,MAAKC,WAC3BR,MAAM,sBAAwBQ,SAASC,qBACxCC,OAAMC,QAELnB,QAAQmB,MAAM,SAAUA,UAG5BhB,SAASiB,oBAAoB,UAAWX,uBAGxCT,QAAQC,IAAI,qBAIpBE,SAASE,iBAAiB,UAAWI,sBAErCT,QAAQC,IAAI,kCAIhBD,QAAQC,IAAI"}