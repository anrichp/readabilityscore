{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// Import the processText function from the repository module\nimport { processText } from './repository';\n\n/**\n * Initialize the readability score functionality.\n * This function sets up the event listener for the scan button.\n */\nexport const init = () => {\n    const scanButton = document.getElementById('scan-button');\n    if (scanButton) {\n        scanButton.addEventListener('click', handleScanButtonClick);\n    } else {\n        // Log an error if the scan button is not found\n        // eslint-disable-next-line no-console\n        console.error('Scan button not found');\n    }\n\n    // Create and append the instruction element\n    const instructionElement = document.createElement('div');\n    instructionElement.id = 'readability-instruction';\n    instructionElement.style.display = 'none';\n    instructionElement.innerHTML = 'Please select text on the page to analyze its readability.';\n    document.body.appendChild(instructionElement);\n};\n\n/**\n * Handle the scan button click event.\n * This function prepares the UI for text selection and sets up the mouseup event listener.\n */\nfunction handleScanButtonClick() {\n    const resultContainer = document.getElementById('readability-result');\n    const instructionElement = document.getElementById('readability-instruction');\n\n    if (resultContainer && instructionElement) {\n        // Clear any existing results\n        resultContainer.innerHTML = '';\n\n        // Show and position the instruction immediately\n        showInstruction(instructionElement);\n\n        // Set up the mouseup event listener to capture text selection\n        document.addEventListener('mouseup', textSelectionHandler);\n\n        // Update instruction position on mouse move\n        document.addEventListener('mousemove', (e) => positionInstruction(instructionElement, e));\n    } else {\n        // Log an error if the result container or instruction element is not found\n        // eslint-disable-next-line no-console\n        console.error('Result container or instruction element not found');\n    }\n}\n\n/**\n * Show and position the instruction element.\n * @param {HTMLElement} instructionElement - The instruction element.\n */\nfunction showInstruction(instructionElement) {\n    instructionElement.style.display = 'block';\n    instructionElement.style.position = 'fixed';\n    instructionElement.style.zIndex = '100000';\n\n    // Position in the center of the viewport initially\n    const viewportWidth = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n    const viewportHeight = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n\n    instructionElement.style.left = `${viewportWidth / 2 - instructionElement.offsetWidth / 2}px`;\n    instructionElement.style.top = `${viewportHeight / 2 - instructionElement.offsetHeight / 2}px`;\n}\n\n/**\n * Position the instruction element near the mouse cursor.\n * @param {HTMLElement} instructionElement - The instruction element.\n * @param {MouseEvent} e - The mouse event object.\n */\nfunction positionInstruction(instructionElement, e) {\n    instructionElement.style.left = `${e.clientX + 10}px`;\n    instructionElement.style.top = `${e.clientY + 10}px`;\n}\n\n/**\n * Handle the text selection event.\n * This function is called when the user releases the mouse button after selecting text.\n */\nfunction textSelectionHandler() {\n    const selection = window.getSelection();\n    const selectedText = getSelectedText(selection);\n\n    if (selectedText !== '') {\n        const pageUrl = window.location.href;\n\n        // Process the selected text\n        processText(selectedText, pageUrl)\n            .then(handleProcessTextResponse)\n            .catch((error) => {\n                // Log any errors that occur during processing\n                // eslint-disable-next-line no-console\n                console.error('Error:', error);\n            });\n\n        // Remove the mouseup and mousemove event listeners\n        document.removeEventListener('mouseup', textSelectionHandler);\n        document.removeEventListener('mousemove', (e) =>\n            positionInstruction(document.getElementById('readability-instruction'), e)\n        );\n\n        // Hide the instruction\n        const instructionElement = document.getElementById('readability-instruction');\n        if (instructionElement) {\n            instructionElement.style.display = 'none';\n        }\n    }\n}\n\n/**\n * Get the selected text from the selection object.\n * @param {Selection} selection - The selection object.\n * @returns {string} The selected text, trimmed and with excess whitespace removed.\n */\nfunction getSelectedText(selection) {\n    let selectedText = '';\n    for (let i = 0; i < selection.rangeCount; i++) {\n        const range = selection.getRangeAt(i);\n        const container = document.createElement('div');\n        container.appendChild(range.cloneContents());\n        selectedText += container.innerText || container.textContent;\n    }\n    // Remove excess whitespace and trim the selected text\n    return selectedText.replace(/\\s+/g, ' ').trim();\n}\n\n/**\n * Handle the response from processing the text.\n * This function displays the readability score, difficulty level, and remediation suggestions.\n * @param {Object} response - The response object from processText.\n */\nfunction handleProcessTextResponse(response) {\n    const resultContainer = document.getElementById('readability-result');\n    const score = response.readabilityscore;\n    const difficultyLevel = getDifficultyLevel(score);\n\n    // Create and populate the result paragraph\n    const resultParagraph = document.createElement('p');\n    resultParagraph.innerHTML = `\n        <strong>Readability Score:</strong> ${score}<br>\n        <strong>Difficulty Level:</strong> ${difficultyLevel}\n    `;\n    resultContainer.appendChild(resultParagraph);\n\n    // Display remediation suggestions if available\n    if (response.remediationSuggestions && response.remediationSuggestions.length > 0) {\n        const suggestionsHeader = document.createElement('h4');\n        suggestionsHeader.textContent = 'Remediation Suggestions:';\n        resultContainer.appendChild(suggestionsHeader);\n\n        const suggestionsList = document.createElement('ul');\n        response.remediationSuggestions.forEach(suggestion => {\n            const listItem = document.createElement('li');\n            listItem.textContent = suggestion;\n            suggestionsList.appendChild(listItem);\n        });\n        resultContainer.appendChild(suggestionsList);\n    }\n}\n\n/**\n * Get the difficulty level based on the Gunning Fog Index score.\n * @param {number} score - The Gunning Fog Index score.\n * @returns {string} The difficulty level description.\n */\nfunction getDifficultyLevel(score) {\n    if (score <= 6) { return \"Easy - Readable by a 6th grader\"; }\n    if (score <= 7) { return \"Fairly Easy - Readable by a 7th grader\"; }\n    if (score <= 8) { return \"Standard - Readable by an 8th grader\"; }\n    if (score <= 9) { return \"Fairly Difficult - Readable by a high school freshman\"; }\n    if (score <= 10) { return \"Difficult - Readable by a high school sophomore\"; }\n    if (score <= 11) { return \"Difficult - Readable by a high school junior\"; }\n    if (score <= 12) { return \"Very Difficult - Readable by a high school senior\"; }\n    if (score <= 16) { return \"College Level - Readable by college students\"; }\n    return \"Graduate Level - Readable by college graduates\";\n}"],"names":["handleScanButtonClick","resultContainer","document","getElementById","instructionElement","innerHTML","style","display","position","zIndex","viewportWidth","Math","max","documentElement","clientWidth","window","innerWidth","viewportHeight","clientHeight","innerHeight","left","offsetWidth","top","offsetHeight","showInstruction","addEventListener","textSelectionHandler","e","positionInstruction","console","error","clientX","clientY","selectedText","selection","i","rangeCount","range","getRangeAt","container","createElement","appendChild","cloneContents","innerText","textContent","replace","trim","getSelectedText","getSelection","pageUrl","location","href","then","handleProcessTextResponse","catch","removeEventListener","response","score","readabilityscore","difficultyLevel","getDifficultyLevel","resultParagraph","remediationSuggestions","length","suggestionsHeader","suggestionsList","forEach","suggestion","listItem","scanButton","id","body"],"mappings":"sLA6BSA,8BACCC,gBAAkBC,SAASC,eAAe,sBAC1CC,mBAAqBF,SAASC,eAAe,2BAE/CF,iBAAmBG,oBAEnBH,gBAAgBI,UAAY,YAqBXD,oBACrBA,mBAAmBE,MAAMC,QAAU,QACnCH,mBAAmBE,MAAME,SAAW,QACpCJ,mBAAmBE,MAAMG,OAAS,eAG5BC,cAAgBC,KAAKC,IAAIV,SAASW,gBAAgBC,aAAe,EAAGC,OAAOC,YAAc,GACzFC,eAAiBN,KAAKC,IAAIV,SAASW,gBAAgBK,cAAgB,EAAGH,OAAOI,aAAe,GAElGf,mBAAmBE,MAAMc,eAAUV,cAAgB,EAAIN,mBAAmBiB,YAAc,QACxFjB,mBAAmBE,MAAMgB,cAASL,eAAiB,EAAIb,mBAAmBmB,aAAe,QA5BrFC,CAAgBpB,oBAGhBF,SAASuB,iBAAiB,UAAWC,sBAGrCxB,SAASuB,iBAAiB,aAAcE,GAAMC,oBAAoBxB,mBAAoBuB,MAItFE,QAAQC,MAAM,8DA0BbF,oBAAoBxB,mBAAoBuB,GAC7CvB,mBAAmBE,MAAMc,eAAUO,EAAEI,QAAU,SAC/C3B,mBAAmBE,MAAMgB,cAASK,EAAEK,QAAU,kBAOzCN,6BAECO,sBAiCeC,eACjBD,aAAe,OACd,IAAIE,EAAI,EAAGA,EAAID,UAAUE,WAAYD,IAAK,OACrCE,MAAQH,UAAUI,WAAWH,GAC7BI,UAAYrC,SAASsC,cAAc,OACzCD,UAAUE,YAAYJ,MAAMK,iBAC5BT,cAAgBM,UAAUI,WAAaJ,UAAUK,mBAG9CX,aAAaY,QAAQ,OAAQ,KAAKC,OA1CpBC,CADHhC,OAAOiC,mBAGJ,KAAjBf,aAAqB,OACfgB,QAAUlC,OAAOmC,SAASC,iCAGpBlB,aAAcgB,SACrBG,KAAKC,2BACLC,OAAOxB,QAGJD,QAAQC,MAAM,SAAUA,UAIhC5B,SAASqD,oBAAoB,UAAW7B,sBACxCxB,SAASqD,oBAAoB,aAAc5B,GACvCC,oBAAoB1B,SAASC,eAAe,2BAA4BwB,WAItEvB,mBAAqBF,SAASC,eAAe,2BAC/CC,qBACAA,mBAAmBE,MAAMC,QAAU,kBA2BtC8C,0BAA0BG,gBACzBvD,gBAAkBC,SAASC,eAAe,sBAC1CsD,MAAQD,SAASE,iBACjBC,yBA+BkBF,UACpBA,OAAS,QAAY,qCACrBA,OAAS,QAAY,4CACrBA,OAAS,QAAY,0CACrBA,OAAS,QAAY,2DACrBA,OAAS,SAAa,qDACtBA,OAAS,SAAa,kDACtBA,OAAS,SAAa,uDACtBA,OAAS,SAAa,qDACnB,iDAxCiBG,CAAmBH,OAGrCI,gBAAkB3D,SAASsC,cAAc,QAC/CqB,gBAAgBxD,kEAC0BoD,kEACDE,0BAEzC1D,gBAAgBwC,YAAYoB,iBAGxBL,SAASM,wBAA0BN,SAASM,uBAAuBC,OAAS,EAAG,OACzEC,kBAAoB9D,SAASsC,cAAc,MACjDwB,kBAAkBpB,YAAc,2BAChC3C,gBAAgBwC,YAAYuB,yBAEtBC,gBAAkB/D,SAASsC,cAAc,MAC/CgB,SAASM,uBAAuBI,SAAQC,mBAC9BC,SAAWlE,SAASsC,cAAc,MACxC4B,SAASxB,YAAcuB,WACvBF,gBAAgBxB,YAAY2B,aAEhCnE,gBAAgBwC,YAAYwB,gCAzJhB,WACVI,WAAanE,SAASC,eAAe,eACvCkE,WACAA,WAAW5C,iBAAiB,QAASzB,uBAIrC6B,QAAQC,MAAM,+BAIZ1B,mBAAqBF,SAASsC,cAAc,OAClDpC,mBAAmBkE,GAAK,0BACxBlE,mBAAmBE,MAAMC,QAAU,OACnCH,mBAAmBC,UAAY,6DAC/BH,SAASqE,KAAK9B,YAAYrC"}