{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// Import the processText function from the repository module\nimport { processText } from './repository';\n\n/**\n * Initialize the readability score functionality.\n * This function sets up the event listener for the scan button.\n */\nexport const init = () => {\n    const scanButton = document.getElementById('scan-button');\n    if (scanButton) {\n        scanButton.addEventListener('click', handleScanButtonClick);\n    } else {\n        // Log an error if the scan button is not found\n        // eslint-disable-next-line no-console\n        console.log('scanButton not found');\n    }\n};\n\n/**\n * Handle the scan button click event.\n * This function prepares the UI for text selection and sets up the mouseup event listener.\n */\nfunction handleScanButtonClick() {\n    const resultContainer = document.getElementById('readability-result');\n    if (resultContainer) {\n        // Clear any existing results\n        resultContainer.innerHTML = '';\n        // Prompt the user to select text\n        alert('Please select text on the page to analyze its readability.');\n        // Set up the mouseup event listener to capture text selection\n        document.addEventListener('mouseup', textSelectionHandler);\n    } else {\n        // Log an error if the result container is not found\n        // eslint-disable-next-line no-console\n        console.log('resultContainer not found');\n    }\n}\n\n/**\n * Handle the text selection event.\n * This function is called when the user releases the mouse button after selecting text.\n */\nfunction textSelectionHandler() {\n    const selection = window.getSelection();\n    const selectedText = getSelectedText(selection);\n\n    if (selectedText !== '') {\n        const pageUrl = window.location.href;\n\n        // Process the selected text\n        processText(selectedText, pageUrl)\n            .then(handleProcessTextResponse)\n            .catch((error) => {\n                // Log any errors that occur during processing\n                // eslint-disable-next-line no-console\n                console.error('Error:', error);\n            });\n\n        // Remove the mouseup event listener to prevent multiple selections\n        document.removeEventListener('mouseup', textSelectionHandler);\n    }\n}\n\n/**\n * Get the selected text from the selection object.\n * @param {Selection} selection - The selection object.\n * @returns {string} The selected text, trimmed and with excess whitespace removed.\n */\nfunction getSelectedText(selection) {\n    let selectedText = '';\n    for (let i = 0; i < selection.rangeCount; i++) {\n        const range = selection.getRangeAt(i);\n        const container = document.createElement('div');\n        container.appendChild(range.cloneContents());\n        selectedText += container.innerText || container.textContent;\n    }\n    // Remove excess whitespace and trim the selected text\n    return selectedText.replace(/\\s+/g, ' ').trim();\n}\n\n/**\n * Handle the response from processing the text.\n * This function displays the readability score, difficulty level, and remediation suggestions.\n * @param {Object} response - The response object from processText.\n */\nfunction handleProcessTextResponse(response) {\n    const resultContainer = document.getElementById('readability-result');\n    const score = response.readabilityscore;\n    const difficultyLevel = getDifficultyLevel(score);\n\n    // Create and populate the result paragraph\n    const resultParagraph = document.createElement('p');\n    resultParagraph.innerHTML = `\n        <strong>Gunning Fog Index:</strong> ${score.toFixed(1)}<br>\n        <strong>Reading Level:</strong> ${difficultyLevel}\n    `;\n    resultContainer.appendChild(resultParagraph);\n\n    // Display remediation suggestions if available\n    if (response.remediationSuggestions && response.remediationSuggestions.length > 0) {\n        const suggestionsHeader = document.createElement('h4');\n        suggestionsHeader.textContent = 'Remediation Suggestions:';\n        resultContainer.appendChild(suggestionsHeader);\n\n        const suggestionsList = document.createElement('ul');\n        response.remediationSuggestions.forEach(suggestion => {\n            const listItem = document.createElement('li');\n            listItem.textContent = suggestion;\n            suggestionsList.appendChild(listItem);\n        });\n        resultContainer.appendChild(suggestionsList);\n    }\n}\n\n/**\n * Get the difficulty level based on the Gunning Fog Index score.\n * @param {number} score - The readability score.\n * @returns {string} The reading level description.\n */\nfunction getDifficultyLevel(score) {\n    if (score >= 17) { return \"College graduate\"; }\n    if (score >= 16) { return \"College senior\"; }\n    if (score >= 15) { return \"College junior\"; }\n    if (score >= 14) { return \"College sophomore\"; }\n    if (score >= 13) { return \"College freshman\"; }\n    if (score >= 12) { return \"High school senior\"; }\n    if (score >= 11) { return \"High school junior\"; }\n    if (score >= 10) { return \"High school sophomore\"; }\n    if (score >= 9) { return \"High school freshman\"; }\n    if (score >= 8) { return \"Eighth grade\"; }\n    if (score >= 7) { return \"Seventh grade\"; }\n    if (score >= 6) { return \"Sixth grade\"; }\n    return \"Fifth grade or below\";\n}"],"names":["handleScanButtonClick","resultContainer","document","getElementById","innerHTML","alert","addEventListener","textSelectionHandler","console","log","selectedText","selection","i","rangeCount","range","getRangeAt","container","createElement","appendChild","cloneContents","innerText","textContent","replace","trim","getSelectedText","window","getSelection","pageUrl","location","href","then","handleProcessTextResponse","catch","error","removeEventListener","response","score","readabilityscore","difficultyLevel","getDifficultyLevel","resultParagraph","toFixed","remediationSuggestions","length","suggestionsHeader","suggestionsList","forEach","suggestion","listItem","scanButton"],"mappings":"sLAsBSA,8BACCC,gBAAkBC,SAASC,eAAe,sBAC5CF,iBAEAA,gBAAgBG,UAAY,GAE5BC,MAAM,8DAENH,SAASI,iBAAiB,UAAWC,uBAIrCC,QAAQC,IAAI,sCAQXF,6BAECG,sBAwBeC,eACjBD,aAAe,OACd,IAAIE,EAAI,EAAGA,EAAID,UAAUE,WAAYD,IAAK,OACrCE,MAAQH,UAAUI,WAAWH,GAC7BI,UAAYd,SAASe,cAAc,OACzCD,UAAUE,YAAYJ,MAAMK,iBAC5BT,cAAgBM,UAAUI,WAAaJ,UAAUK,mBAG9CX,aAAaY,QAAQ,OAAQ,KAAKC,OAjCpBC,CADHC,OAAOC,mBAGJ,KAAjBhB,aAAqB,OACfiB,QAAUF,OAAOG,SAASC,iCAGpBnB,aAAciB,SACrBG,KAAKC,2BACLC,OAAOC,QAGJzB,QAAQyB,MAAM,SAAUA,UAIhC/B,SAASgC,oBAAoB,UAAW3B,gCA0BvCwB,0BAA0BI,gBACzBlC,gBAAkBC,SAASC,eAAe,sBAC1CiC,MAAQD,SAASE,iBACjBC,yBA+BkBF,UACpBA,OAAS,SAAa,sBACtBA,OAAS,SAAa,oBACtBA,OAAS,SAAa,oBACtBA,OAAS,SAAa,uBACtBA,OAAS,SAAa,sBACtBA,OAAS,SAAa,wBACtBA,OAAS,SAAa,wBACtBA,OAAS,SAAa,2BACtBA,OAAS,QAAY,0BACrBA,OAAS,QAAY,kBACrBA,OAAS,QAAY,mBACrBA,OAAS,QAAY,oBAClB,uBA5CiBG,CAAmBH,OAGrCI,gBAAkBtC,SAASe,cAAc,QAC/CuB,gBAAgBpC,kEAC0BgC,MAAMK,QAAQ,4DAClBH,0BAEtCrC,gBAAgBiB,YAAYsB,iBAGxBL,SAASO,wBAA0BP,SAASO,uBAAuBC,OAAS,EAAG,OACzEC,kBAAoB1C,SAASe,cAAc,MACjD2B,kBAAkBvB,YAAc,2BAChCpB,gBAAgBiB,YAAY0B,yBAEtBC,gBAAkB3C,SAASe,cAAc,MAC/CkB,SAASO,uBAAuBI,SAAQC,mBAC9BC,SAAW9C,SAASe,cAAc,MACxC+B,SAAS3B,YAAc0B,WACvBF,gBAAgB3B,YAAY8B,aAEhC/C,gBAAgBiB,YAAY2B,gCAvGhB,WACVI,WAAa/C,SAASC,eAAe,eACvC8C,WACAA,WAAW3C,iBAAiB,QAASN,uBAIrCQ,QAAQC,IAAI"}