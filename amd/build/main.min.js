define("block_readabilityscore/main",["exports","./repository"],(function(_exports,_repository){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;function handleScanButtonClick(){const resultContainer=document.getElementById("readability-result");resultContainer?(resultContainer.innerHTML="",alert("Please select text on the page to analyze its readability."),document.addEventListener("mouseup",textSelectionHandler)):console.log("resultContainer not found")}function textSelectionHandler(){const selectedText=function(selection){let selectedText="";for(let i=0;i<selection.rangeCount;i++){const range=selection.getRangeAt(i),container=document.createElement("div");container.appendChild(range.cloneContents()),selectedText+=container.innerText||container.textContent}return selectedText.replace(/\s+/g," ").trim()}(window.getSelection());if(""!==selectedText){const pageUrl=window.location.href;(0,_repository.processText)(selectedText,pageUrl).then(handleProcessTextResponse).catch((error=>{console.error("Error:",error)})),document.removeEventListener("mouseup",textSelectionHandler)}}function handleProcessTextResponse(response){const resultContainer=document.getElementById("readability-result"),score=response.readabilityscore,difficultyLevel=function(score){if(score<=6)return"Very Easy";if(score<=8)return"Easy";if(score<=10)return"Fairly Easy";if(score<=12)return"Standard";if(score<=14)return"Fairly Difficult";if(score<=18)return"Difficult";return"Very Difficult"}(score),resultParagraph=document.createElement("p");if(resultParagraph.innerHTML="\n        <strong>Readability Score:</strong> ".concat(score,"<br>\n        <strong>Difficulty Level:</strong> ").concat(difficultyLevel,"\n    "),resultContainer.appendChild(resultParagraph),response.remediationSuggestions&&response.remediationSuggestions.length>0){const suggestionsHeader=document.createElement("h4");suggestionsHeader.textContent="Remediation Suggestions:",resultContainer.appendChild(suggestionsHeader);const suggestionsList=document.createElement("ul");response.remediationSuggestions.forEach((suggestion=>{const listItem=document.createElement("li");listItem.textContent=suggestion,suggestionsList.appendChild(listItem)})),resultContainer.appendChild(suggestionsList)}}_exports.init=()=>{const scanButton=document.getElementById("scan-button");scanButton?scanButton.addEventListener("click",handleScanButtonClick):console.log("scanButton not found")}}));

//# sourceMappingURL=main.min.js.map