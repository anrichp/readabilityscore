define("block_readabilityscore/main",["exports","./repository"],(function(_exports,_repository){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;let initialized=!1;_exports.init=()=>{if(console.log("The init function was called"),initialized)return;initialized=!0,console.log("Executing init function logic");const scanButton=document.getElementById("scan-button");scanButton?(console.log("scanButton found:",scanButton),scanButton.addEventListener("click",(function(){console.log("Scan button clicked");const selectedTextContainer=document.getElementById("selected-text");if(selectedTextContainer){console.log("selectedTextContainer found:",selectedTextContainer),selectedTextContainer.innerHTML="",alert("Please select text on the page.");const textSelectionHandler=function(){const selectedText=window.getSelection().toString().trim();if(console.log("Selected text:",selectedText),""!==selectedText){console.log("Selected text is not empty:",selectedText);const paragraph=document.createElement("p");paragraph.textContent=selectedText,selectedTextContainer.appendChild(paragraph);const pageUrl=window.location.href;(0,_repository.processText)(selectedText,pageUrl).then((response=>{alert("Readability Score: "+response.readabilityscore)})).catch((error=>{console.error("Error:",error)})),document.removeEventListener("mouseup",textSelectionHandler)}else console.log("No text selected")};document.addEventListener("mouseup",textSelectionHandler),console.log("textSelectionHandler added")}else console.log("selectedTextContainer not found")}))):console.log("scanButton not found")}}));

//# sourceMappingURL=main.min.js.map